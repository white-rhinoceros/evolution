use crate::landscape::Energy;

pub mod simple;

/// Возможные "действия" растения.
#[derive(Copy, Clone)]
pub enum PlantAction {
    None,       // Нет действия
    Grow,       // Расти
    Reproduce,  // Размножиться
}

/// Типаж, определяющий растение.
pub trait PlantAlive {
    // Методы получения состояния растения.

    /// Полностью ли съедено растение?
    fn is_eaten(&self) -> bool;

    // Метод Action

    /// Действие растения.
    fn action(&mut self) -> PlantAction;

    // Действия, которые реализуют "желания" растения. Удовлетворится ли
    // желание решает Мир по объективным причинам.

    /// Растение может расти.
    ///
    /// # Arguments
    ///
    /// * `energy`: Энергия которую получает растение от мира. Так мы можем
    /// моделировать области, где меньше "солнечного света", или засуху
    /// на планете.
    fn grow_action(&mut self, energy: Energy);

    /// Растение может размножаться.
    fn reproduce_action(&mut self) -> Box<dyn PlantAlive>;

    /// Действие - "нет действия". Поскольку поддержание состояния требует
    /// энергии мы должны ввести такое "бездействие".
    fn inactivity_action(&mut self);

    // Действия, которые можно совершить с растением против его воли.

    /// Растение может поедаться.
    fn be_eaten(&mut self) -> Energy;
}